import os
import asyncio
from dotenv import load_dotenv
from telethon import TelegramClient, events
from telethon.sessions import StringSession

# –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∑–º—ñ–Ω–Ω—ñ –æ—Ç–æ—á–µ–Ω–Ω—è
load_dotenv()
API_ID = int(os.getenv("API_ID"))
API_HASH = os.getenv("API_HASH")
BOT_TOKEN = os.getenv("BOT_TOKEN")
MY_ID = int(os.getenv("MY_ID"))
USER_SESSION_STRING = os.getenv("USER_SESSION_STRING")

# –Æ–∑–µ—Ä —Ç–∞ –±–æ—Ç –∫–ª—ñ—î–Ω—Ç–∏
user = TelegramClient(StringSession(USER_SESSION_STRING), API_ID, API_HASH)
bot = TelegramClient("bot_session", API_ID, API_HASH)

# –ö–∞–Ω–∞–ª–∏ –¥–ª—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É
CHANNELS = [
    -1001881412965,
    -1001246340723,
    -1001925047673,
    -1001795965474,
    -1001585782020,
    -1001661270840,
    -1002076377551,
    -1001943941408,
    -1001648319955,
    -1001495328651,
    -1001550392151,
    -1001744681450,
    -1001592219203,
    -1002158241088,
    -1001883710438,
    -1001615697742,
    -1001172446062,
    -1001605292217
]

# –ö–ª—é—á–æ–≤—ñ —Å–ª–æ–≤–∞
KEYWORDS = [
    # –≤–∞–Ω—Ç–∞–∂ / –≥—Ä—É–∑
    "–≤–∞–Ω—Ç–∞–∂", "–≥—Ä—É–∑", "–≥—Ä—É–∑–æ–≤–æ–π", "–≥—Ä—É–∑–æ–≤–∏–π", "–≥—Ä—É–∑—á–∏–∫", "–≥—Ä—É–∑—á–∏–∫–∏",

    # –ø–µ—Ä–µ–≤–µ–∑–µ–Ω–Ω—è —Ä–µ—á–µ–π
    "–ø–µ—Ä–µ–≤–µ–∑—Ç–∏", "–ø–µ—Ä–µ–≤–µ–∑–µ–Ω–Ω—è", "–ø–µ—Ä–µ–≤–µ—Å—Ç–∏", "–ø–µ—Ä–µ–≤–æ–∑–∫–∞", "–ø–µ—Ä–µ–≤–æ–∑—á–∏–∫", "–ø–µ—Ä–µ–≤—ñ–∑–Ω–∏–∫",
    "–ø–µ—Ä–µ–≤–µ–∑–µ–Ω—è", "–ø–µ—Ä–µ–≤–µ—Å–µ–Ω–Ω—è", "–ø–µ—Ä–µ–≤–æ–∑–∫–∞ –≤–µ—â–µ–π", "–ø–µ—Ä–µ–≤–æ–∑–∫–∞ –º–µ–±–µ–ª—ñ",

    # –ø–µ—Ä–µ—ó–∑–¥
    "–ø–µ—Ä–µ—ó–∑–¥", "–ø–µ—Ä–µ–µ–∑–¥", "–ø–µ—Ä–µ—ó–∑", "–ø–µ—Ä–µ—ñ–∑–¥", "relocation", "relokacia", "relokatsiya",

    # —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
    "–±—É—Å", "–±—É—Å–∏–∫", "–±—É—Å—ñ–∫", "–º—ñ–∫—Ä–æ–∞–≤—Ç–æ–±—É—Å", "–º–∏–∫—Ä–æ–∞–≤—Ç–æ–±—É—Å", "–≥–∞–∑–µ–ª—å", "–º–∞—à–∏–Ω–∞", "–∞–≤—Ç–æ",
    "—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç", "—Ç—Ä–∞—Å–ø–æ—Ä—Ç", "—Ç—Ä–∞–Ω—Å–ø—Ä—Ç", "—Ç—Ä–∞–Ω—Å–ø–æ—Ç", "—Ç—Ä–∞–Ω—Å–ø–∞—Ä—Ç", "—Ç—Ä–∞—Å–Ω–ø–æ—Ä—Ç",

    # –¥–æ—Å—Ç–∞–≤–∫–∞
    "–¥–æ—Å—Ç–∞–≤–∫–∞", "–¥–æ—Å—Ç–∞–≤–∏—Ç–∏", "–¥–æ—Å—Ç–∞–≤–∏—Ç—å", "–≤–∏–≤—ñ–∑", "–≤—ã–≤–æ–∑",

    # —Ä–µ—á—ñ
    "—Ä–µ—á—ñ", "–≤–µ—â–∏", "–ø–æ—Å–∏–ª–∫–∞", "–ø–∞–∫—É–Ω–æ–∫", "–ø–∞–∫–µ—Ç", "–∫–æ—Ä–æ–±–∫–∞", "—è—â–∏–∫",

    # –º–µ–±–ª—ñ / —Ç–µ—Ö–Ω—ñ–∫–∞
    "–º–µ–±–ª—ñ", "–º–µ–±–µ–ª—å", "–¥–∏–≤–∞–Ω", "—à–∞—Ñ–∞", "—à–∫–∞—Ñ", "–ª—ñ–∂–∫–æ", "–∫—Ä–æ–≤–∞—Ç—å",
    "—Å—Ç—ñ–ª", "—Å—Ç–æ–ª", "—Å—Ç—ñ–ª—å—Ü—ñ", "—Å—Ç—É–ª", "—Ç–µ—Ö–Ω—ñ–∫–∞", "—Ç–µ—Ö–Ω–∏–∫–∞", "—Ç–µ–ª–µ–≤—ñ–∑–æ—Ä", "—Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫", "–ø—Ä–∞–ª—å–Ω–∞ –º–∞—à–∏–Ω–∞",

    # üöï –ø–∞—Å–∞–∂–∏—Ä—Å—å–∫—ñ –ø–µ—Ä–µ–≤–µ–∑–µ–Ω–Ω—è
    "–∞–µ—Ä–æ–ø–æ—Ä—Ç", "–∞–µ—Ä–æ–ø–æ—Ä—Ç—É", "–∞–µ—Ä–æ–ø–æ—Ä—Ç–∞", "airport", "charleroi", "—à–∞—Ä–ª–µ—Ä—É–∞", "brussels airport", "–∑–∞–≤–µ–Ω—Ç–µ–º",
    "–ø–æ—ó–∑–¥–∫–∞", "–ø–æ–µ–∑–¥–∫–∞", "–ø–æ–∏–∑–¥–∫–∞", "—ó—Ö–∞—Ç–∏", "–ø–æ–µ—Ö–∞—Ç—å", "–≤—ñ–¥–≤–µ–∑—Ç–∏", "–æ—Ç–≤–µ–∑—Ç–∏",
    "–∑–∞–±—Ä–∞—Ç–∏", "–∑–∞–±–µ—Ä–µ—Ç–µ", "–∑–∞–±—Ä–∞—Ç—å", "–∑–æ–±—Ä–∞—Ç–∏", "–∑–∞–±–µ—Ä–∞—Ç–∏", "pick up", "drop off",
    "–ø—ñ–¥–∫–∏–Ω—É—Ç–∏", "–ø—ñ–¥–≤–µ–∑—Ç–∏", "–ø—ñ–¥–≤–µ—Å—Ç–∏", "ride",
    "—Ç–∞–∫—Å—ñ", "—Ç–∞–∫—Å–∏", "taxi", "uber", "bolt", "–ø–∞—Å–∞–∂–∏—Ä", "–ø–∞—Å–∞–∂–∏—Ä–∏"
]

# –°—Ç–æ–ø-—Å–ª–æ–≤–∞ (–æ–∑–Ω–∞–∫–∏ —Ä–µ–∫–ª–∞–º–∏/–∫–æ–º–µ—Ä—Ü—ñ—ó)
STOPWORDS = [
    "—Ü—ñ–Ω–∞", "—Ü—ñ–Ω–∏", "–¥–æ—Å—Ç—É–ø–Ω—ñ", "—à–≤–∏–¥–∫–æ", "—è–∫—ñ—Å–Ω–æ", "–Ω–∞–¥—ñ–π–Ω–æ", "–ø–æ—Å–ª—É–≥–∏", "–≥–∞—Ä–∞–Ω—Ç—ñ—è",
    "—Ç–µ–ª–µ—Ñ–æ–Ω—É–π—Ç–µ", "–∑–≤–µ—Ä—Ç–∞–π—Ç–µ—Å—å", "–Ω–∞–¥–∞—é", "–ø—Ä–æ–ø–æ–Ω—É—î–º–æ", "–ø—Ä–æ–ø–æ–Ω—É—é", "–∫—É—Ä—Å–∏", "–∫—É—Ä—Å", "–Ω–∞–≤—á–∞–Ω–Ω—è", "—ñ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä", "—à–∫–æ–ª–∞", "—Ç—Ä–µ–Ω—ñ–Ω–≥", "–Ω–∞–≤—á–∞—Ç–∏—Å—è",
    "viber", "–≤–∞–π–±–µ—Ä", "whatsapp", "–≤–∞—Ç—Å–∞–ø", "telegram", "tg:", "—Ç–µ–ª:", "üìû", "üì±", "+32", "+380"
]

# üìå ID –∫–∞–Ω–∞–ª—É/–≥—Ä—É–ø–∏, –∫—É–¥–∏ —Å–∫–ª–∞–¥–∞—Ç–∏ –ø–µ—Ä–µ—Å–ª–∞–Ω—ñ –æ—Ä–∏–≥—ñ–Ω–∞–ª–∏
TARGET_CHAT_ID = -1002932377188


@user.on(events.NewMessage(chats=CHANNELS))
async def handler(event):
    try:
        text = (event.message.message or "").lower()

        # 1. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–ª—é—á–æ–≤—ñ —Å–ª–æ–≤–∞
        if not any(k in text for k in KEYWORDS):
            return

        # 2. –§—ñ–ª—å—Ç—Ä—É—î–º–æ —Ä–µ–∫–ª–∞–º—É (—Å—Ç–æ–ø-—Å–ª–æ–≤–∞)
        if any(s in text for s in STOPWORDS):
            return

        # –Ü–Ω—Ñ–æ –ø—Ä–æ —á–∞—Ç/–∫–∞–Ω–∞–ª
        chat = await event.get_chat()
        title = getattr(chat, "title", None) or getattr(chat, "username", None) or f"ID {chat.id}"

        # –ê–≤—Ç–æ—Ä
        sender = await event.get_sender()
        author = f"@{sender.username}" if sender and sender.username else "–Ω–µ–≤—ñ–¥–æ–º–∏–π"

        # –õ—ñ–Ω–∫
        if getattr(chat, "username", None):
            link = f"https://t.me/{chat.username}/{event.id}"
        else:
            link = f"https://t.me/c/{str(chat.id)[4:]}/{event.id}"

        # –û—Ñ–æ—Ä–º–ª–µ–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        msg = (
            f"üì¢ <b>–ß–∞—Ç:</b> {title}\n"
            f"üì¶ <b>–ö–∞—Ç–µ–≥–æ—Ä—ñ—è:</b> –ü–µ—Ä–µ–≤–µ–∑–µ–Ω–Ω—è (–≤–∞–Ω—Ç–∞–∂–Ω—ñ / –ø–∞—Å–∞–∂–∏—Ä—Å—å–∫—ñ)\n"
            f"üåç <b>–ö—Ä–∞—ó–Ω–∞:</b> –ë–µ–ª—å–≥—ñ—è\n"
            f"üìç <b>–†–µ–≥—ñ–æ–Ω:</b> –Ω–µ–≤—ñ–¥–æ–º–æ\n"
            f"üèô <b>–ú—ñ—Å—Ç–æ:</b> –Ω–µ–≤—ñ–¥–æ–º–æ\n"
            f"üîó <b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:</b> {link}\n"
            f"üë§ <b>–ê–≤—Ç–æ—Ä:</b> {author}\n\n"
            f"üìù <b>–¢–µ–∫—Å—Ç:</b>\n{text}"
        )

        # 1) –ù–∞–¥—Å–∏–ª–∞—î–º–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –±–æ—Ç–æ–º
        await bot.send_message(MY_ID, msg, parse_mode="html")

        # 2) –ü–µ—Ä–µ—Å–∏–ª–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª —É —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–∏–π –∫–∞–Ω–∞–ª
        await user.forward_messages(TARGET_CHAT_ID, event.message)

    except Exception as e:
        print("ERROR in handler:", repr(e))


async def main():
    await bot.start(bot_token=BOT_TOKEN)
    await user.start()
    print("‚úÖ –ë–æ—Ç —ñ —é–∑–µ—Ä –∑–∞–ø—É—â–µ–Ω—ñ")
    await user.run_until_disconnected()


if __name__ == "__main__":
    asyncio.run(main())

# —Å–∫—Ä–∏–ø—Ç –¥–ª—è –≤–∏–≤–µ–¥–µ–Ω–Ω—è id —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª—ñ–≤
# import os
# from dotenv import load_dotenv
# from telethon import TelegramClient
# from telethon.sessions import StringSession

# load_dotenv()
# API_ID = int(os.getenv("API_ID"))
# API_HASH = os.getenv("API_HASH")
# USER_SESSION_STRING = os.getenv("USER_SESSION_STRING")

# user = TelegramClient(StringSession(USER_SESSION_STRING), API_ID, API_HASH)

# async def main():
#     async for dialog in user.iter_dialogs():
#         if dialog.is_channel:  # —Ç—ñ–ª—å–∫–∏ –∫–∞–Ω–∞–ª–∏ (—ñ–≥–Ω–æ—Ä—É—î–º–æ —á–∞—Ç–∏/–±–æ—Ç—ñ–≤/PM)
#             print(f"{dialog.name} ‚Üí {dialog.id}")

# with user:
#     user.loop.run_until_complete(main())

