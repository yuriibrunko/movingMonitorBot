import os
import asyncio
from dotenv import load_dotenv
from telethon import TelegramClient, events
from telethon.sessions import StringSession

# –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∑–º—ñ–Ω–Ω—ñ –æ—Ç–æ—á–µ–Ω–Ω—è
load_dotenv()
API_ID = int(os.getenv("API_ID"))
API_HASH = os.getenv("API_HASH")
BOT_TOKEN = os.getenv("BOT_TOKEN")
MY_ID = int(os.getenv("MY_ID"))
USER_SESSION_STRING = os.getenv("USER_SESSION_STRING")

# —Å—Ç–≤–æ—Ä—é—î–º–æ –∫–ª—ñ—î–Ω—Ç—ñ–≤
user = TelegramClient(StringSession(USER_SESSION_STRING), API_ID, API_HASH)
bot = TelegramClient("bot_session", API_ID, API_HASH)

# –∫–∞–Ω–∞–ª–∏ –¥–ª—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É
CHANNELS = [
    -1001881412965,
    -1001246340723,
    -1001925047673,
    -1001795965474,
    -1001585782020,
    -1001661270840,
    -1002076377551,
    -1001943941408,
    -1001648319955,
    -1001495328651,
    -1001550392151,
    -1001744681450,
    -1001592219203,
    -1002158241088,
    -1001883710438,
    -1001615697742,
    -1001172446062,
    -1001605292217
]

# –∫–ª—é—á–æ–≤—ñ —Å–ª–æ–≤–∞ –¥–ª—è –ø–æ—à—É–∫—É
KEYWORDS = [
    # –≤–∞–Ω—Ç–∞–∂ / –≥—Ä—É–∑
    "–≤–∞–Ω—Ç–∞–∂", "–≥—Ä—É–∑", "–≥—Ä—É–∑–æ–≤–æ–π", "–≥—Ä—É–∑–æ–≤–∏–π", "–≥—Ä—É–∑—á–∏–∫", "–≥—Ä—É–∑—á–∏–∫–∏",

    # –ø–µ—Ä–µ–≤–µ–∑–µ–Ω–Ω—è
    "–ø–µ—Ä–µ–≤–µ–∑—Ç–∏", "–ø–µ—Ä–µ–≤–µ–∑–µ–Ω–Ω—è", "–ø–µ—Ä–µ–≤–µ—Å—Ç–∏", "–ø–µ—Ä–µ–≤–æ–∑–∫–∞", "–ø–µ—Ä–µ–≤–æ–∑—á–∏–∫", "–ø–µ—Ä–µ–≤—ñ–∑–Ω–∏–∫",
    "–ø–µ—Ä–µ–≤–µ–∑–µ–Ω—è", "–ø–µ—Ä–µ–≤–µ—Å–µ–Ω–Ω—è", "–ø–µ—Ä–µ–≤–æ–∑–∫–∞ –≤–µ—â–µ–π", "–ø–µ—Ä–µ–≤–æ–∑–∫–∞ –º–µ–±–µ–ª—ñ",

    # –ø–µ—Ä–µ—ó–∑–¥
    "–ø–µ—Ä–µ—ó–∑–¥", "–ø–µ—Ä–µ–µ–∑–¥", "–ø–µ—Ä–µ—ó–∑", "–ø–µ—Ä–µ—ñ–∑–¥", "relocation", "relokacia", "relokatsiya",

    # —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
    "–±—É—Å", "–±—É—Å–∏–∫", "–±—É—Å—ñ–∫", "–±—É—Å–∏–∫—ñ", "–±—É—Å–∏–∫—ã",
    "–º—ñ–∫—Ä–æ–∞–≤—Ç–æ–±—É—Å", "–º–∏–∫—Ä–æ–∞–≤—Ç–æ–±—É—Å", "–º—ñ–∫—Ä–∞–∞–≤—Ç–æ–±—É—Å",
    "–≥–∞–∑–µ–ª—å", "–≥–∞–∑–µ–ª", "gazel",
    "–º–∞—à–∏–Ω–∞", "–∞–≤—Ç–æ", "—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç", "—Ç—Ä–∞—Å–ø–æ—Ä—Ç", "—Ç—Ä–∞–Ω—Å–ø—Ä—Ç", "—Ç—Ä–∞–Ω—Å–ø–æ—Ç", "—Ç—Ä–∞–Ω—Å–ø–∞—Ä—Ç", "—Ç—Ä–∞—Å–Ω–ø–æ—Ä—Ç",

    # –¥–æ—Å—Ç–∞–≤–∫–∞
    "–¥–æ—Å—Ç–∞–≤–∫–∞", "–¥–æ—Å—Ç–∞–≤–∏—Ç–∏", "–¥–æ—Å—Ç–∞–≤–∏—Ç—å", "–¥–æ—Å—Ç–∞–≤–∞", "–¥–æ—Å—Ç–≤–∫–∞", "–¥–æ—Å—Ç–∞–∫–∞", "–¥–æ—Å—Ç–∞–≤–∫a",
    "–≤–∏–≤—ñ–∑", "–≤—ã–≤–æ–∑", "–≤–∏–≤–æ—Å",

    # —Ä–µ—á—ñ
    "—Ä–µ—á—ñ", "–≤–µ—â–∏", "—Ä–µ—ñ", "–≤–µ—à–∏", "–≤–µ—à—á–∏",
    "–ø–æ—Å–∏–ª–∫–∞", "–ø–æ—Å—ã–ª–∫–∞", "–ø–∞–∫—É–Ω–æ–∫", "–ø–∞–∫–µ—Ç", "–∫–æ—Ä–æ–±–∫–∞", "–∫–æ—Ä–æ–±–∫–∏", "—è—â–∏–∫",

    # –º–µ–±–ª—ñ / —Ç–µ—Ö–Ω—ñ–∫–∞
    "–º–µ–±–ª—ñ", "–º–µ–±–µ–ª—å", "–º–µ–±–µ–ª", "–º—î–±–ª—ñ",
    "–¥–∏–≤–∞–Ω", "–¥–µ–≤–∞–Ω", "diwan",
    "—à–∞—Ñ–∞", "—à–æ—Ñ–∞", "—à–∫–∞—Ñ",
    "–ª—ñ–∂–∫–æ", "–ª—ñ–∂–∫–∞", "–ª—ñ–∂–∫–∫–æ", "–ª–∏–∂–∫–æ", "–∫—Ä–æ–≤–∞—Ç—å",
    "—Å—Ç—ñ–ª", "—Å—Ç–æ–ª", "stol", "—Å—Ç—ñ–ª–ª",
    "—Å—Ç—ñ–ª—å—Ü—ñ", "—Å—Ç—É–ª", "—Å—Ç—É–ª—å—è", "—Å—Ç—ñ–ª–µ—Ü—å",
    "—Ç–µ—Ö–Ω—ñ–∫–∞", "—Ç–µ—Ö–Ω–∏–∫–∞", "–ø–æ–±—É—Ç–æ–≤–∞ —Ç–µ—Ö–Ω—ñ–∫–∞", "–±—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞",
    "—Ç–µ–ª–µ–≤—ñ–∑–æ—Ä", "—Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫", "–ø—Ä–∞–ª—å–Ω–∞ –º–∞—à–∏–Ω–∞", "—Å—Ç–∏—Ä–∞–ª–∫–∞"
]

# —Å–ª–æ–≤–∞/–ø–∞—Ç–µ—Ä–Ω–∏ –¥–ª—è —Ä–µ–∫–ª–∞–º–∏ (—ó—Ö —Ç—Ä–µ–±–∞ –≤—ñ–¥—Å—ñ—è—Ç–∏)
AD_KEYWORDS = [
    "–Ω–∞–¥–∞—é –ø–æ—Å–ª—É–≥–∏", "–ø—Ä–æ–ø–æ–Ω—É—é –ø–µ—Ä–µ–≤–µ–∑–µ–Ω–Ω—è", "–ø–æ—Å–ª—É–≥–∏ –ø–µ—Ä–µ–≤–µ–∑–µ–Ω–Ω—è",
    "–¥–æ—Å—Ç–∞–≤–∫–∞ –ø–æ", "—Ü—ñ–Ω–∞", "–ø—Ä–∞–π—Å", "–æ–ø–ª–∞—Ç–∞", "24/7",
    "viber", "whatsapp", "telegram", "–¥–∏—Ä–µ–∫—Ç",
    "—Ç–µ–ª–µ—Ñ–æ–Ω", "–¥–∑–≤–æ–Ω—ñ—Ç—å", "–∑–≤–µ—Ä—Ç–∞–π—Ç–µ—Å—å",
    "+32", "+380", "+48", "+420", "097", "098", "050", "063", "073", "093",
    "üöö", "üì¶", "üí∂", "‚û°Ô∏è", "‚úÖ", "‚úîÔ∏è", "üìû", "üì±"
]

# ID –∫–∞–Ω–∞–ª—É/–≥—Ä—É–ø–∏ –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –æ—Ä–∏–≥—ñ–Ω–∞–ª—ñ–≤
TARGET_CHAT_ID = -1002932377188


@user.on(events.NewMessage(chats=CHANNELS))
async def handler(event):
    try:
        text = (event.message.message or "").lower()

        # 1. –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –∫–ª—é—á–æ–≤—ñ —Å–ª–æ–≤–∞
        if not any(k in text for k in KEYWORDS):
            return

        # 2. –≤—ñ–¥—Å—ñ—é–≤–∞–Ω–Ω—è —Ä–µ–∫–ª–∞–º–∏
        if any(ad in text for ad in AD_KEYWORDS):
            print("‚è© –í—ñ–¥—Å—ñ—è–Ω–æ —Ä–µ–∫–ª–∞–º—É:", text[:60])
            return

        # 3. –æ—Ç—Ä–∏–º—É—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —á–∞—Ç
        chat = await event.get_chat()
        title = getattr(chat, "title", None) or getattr(chat, "username", None) or f"ID {chat.id}"

        # 4. –∞–≤—Ç–æ—Ä –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        sender = await event.get_sender()
        author = f"@{sender.username}" if sender and sender.username else "–Ω–µ–≤—ñ–¥–æ–º–∏–π"

        # 5. –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        if getattr(chat, "username", None):
            link = f"https://t.me/{chat.username}/{event.id}"
        else:
            link = f"https://t.me/c/{str(chat.id)[4:]}/{event.id}"

        # 6. —Ñ–æ—Ä–º—É—î–º–æ –∫—Ä–∞—Å–∏–≤–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        msg = (
            f"üì¢ <b>–ß–∞—Ç:</b> {title}\n"
            f"üì¶ <b>–ö–∞—Ç–µ–≥–æ—Ä—ñ—è:</b> –í–∞–Ω—Ç–∞–∂–Ω—ñ –ø–µ—Ä–µ–≤–µ–∑–µ–Ω–Ω—è –ø–æ –∫—Ä–∞—ó–Ω—ñ\n"
            f"üåç <b>–ö—Ä–∞—ó–Ω–∞:</b> –ë–µ–ª—å–≥—ñ—è\n"
            f"üìç <b>–†–µ–≥—ñ–æ–Ω:</b> –Ω–µ–≤—ñ–¥–æ–º–æ\n"
            f"üèô <b>–ú—ñ—Å—Ç–æ:</b> –Ω–µ–≤—ñ–¥–æ–º–æ\n"
            f"üîó <b>–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:</b> {link}\n"
            f"üë§ <b>–ê–≤—Ç–æ—Ä:</b> {author}\n\n"
            f"üìù <b>–¢–µ–∫—Å—Ç:</b>\n{text}"
        )

        # 7. –Ω–∞–¥—Å–∏–ª–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Ç–æ–±—ñ
        try:
            await bot.send_message(MY_ID, msg, parse_mode="html")
        except Exception as e:
            print("ERROR: bot.send_message failed:", repr(e))

        # 8. –ø–µ—Ä–µ—Å–∏–ª–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª —É –∫–∞–Ω–∞–ª
        try:
            await user.forward_messages(TARGET_CHAT_ID, event.message)
        except Exception as e:
            print("ERROR: forward_messages failed:", repr(e))

    except Exception as main_exc:
        print("ERROR in handler:", repr(main_exc))


async def main():
    await bot.start(bot_token=BOT_TOKEN)
    await user.start()
    print("‚úÖ –ë–æ—Ç —ñ —é–∑–µ—Ä –∑–∞–ø—É—â–µ–Ω—ñ")
    await user.run_until_disconnected()


if __name__ == "__main__":
    asyncio.run(main())


# —Å–∫—Ä–∏–ø—Ç –¥–ª—è –≤–∏–≤–µ–¥–µ–Ω–Ω—è id —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª—ñ–≤
# import os
# from dotenv import load_dotenv
# from telethon import TelegramClient
# from telethon.sessions import StringSession

# load_dotenv()
# API_ID = int(os.getenv("API_ID"))
# API_HASH = os.getenv("API_HASH")
# USER_SESSION_STRING = os.getenv("USER_SESSION_STRING")

# user = TelegramClient(StringSession(USER_SESSION_STRING), API_ID, API_HASH)

# async def main():
#     async for dialog in user.iter_dialogs():
#         if dialog.is_channel:  # —Ç—ñ–ª—å–∫–∏ –∫–∞–Ω–∞–ª–∏ (—ñ–≥–Ω–æ—Ä—É—î–º–æ —á–∞—Ç–∏/–±–æ—Ç—ñ–≤/PM)
#             print(f"{dialog.name} ‚Üí {dialog.id}")

# with user:
#     user.loop.run_until_complete(main())

